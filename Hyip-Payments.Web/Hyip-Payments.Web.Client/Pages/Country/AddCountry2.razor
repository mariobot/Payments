@page "/country/add2"

@using Hyip_Payments.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Add Country (API)</h3>

<EditForm Model="@country" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Country Name</label>
        <InputText class="form-control" @bind-Value="country.Name" />
        <ValidationMessage For="@(() => country.Name)" />
    </div>

    <div class="mb-3">
        <label class="form-label">ISO Code</label>
        <InputText class="form-control" @bind-Value="country.IsoCode" />
        <ValidationMessage For="@(() => country.IsoCode)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Capital</label>
        <InputText class="form-control" @bind-Value="country.Capital" />
        <ValidationMessage For="@(() => country.Capital)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Region</label>
        <InputText class="form-control" @bind-Value="country.Region" />
        <ValidationMessage For="@(() => country.Region)" />
    </div>

    <button type="submit" class="btn btn-primary">Add Country</button>
</EditForm>

@if (successMessage != null)
{
    <div class="alert alert-success mt-3">@successMessage</div>
}

@code {
    private CountryModel country = new();
    private string? successMessage;

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("api/Country", country);
        if (response.IsSuccessStatusCode)
        {
            var created = await response.Content.ReadFromJsonAsync<CountryModel>();
            successMessage = $"Country '{created?.Name}' added successfully!";
            country = new(); // Reset form
        }
        else
        {
            successMessage = "Failed to add country.";
        }
    }
}
