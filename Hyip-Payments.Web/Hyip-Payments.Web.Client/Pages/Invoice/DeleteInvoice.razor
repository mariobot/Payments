@page "/invoice/delete/{Id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Delete Invoice</h3>

@if (isLoading)
{
    <p>Deleting invoice...</p>
}
else if (successMessage != null)
{
    <div class="alert alert-success">@successMessage</div>
    <button class="btn btn-primary" @onclick="GoToList">Back to Invoice List</button>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
    <button class="btn btn-secondary" @onclick="GoToList">Back to Invoice List</button>
}
else
{
    <div class="alert alert-warning">
        Are you sure you want to delete this invoice?
    </div>
    <button class="btn btn-danger" @onclick="DeleteInvoice2">Delete</button>
    <button class="btn btn-secondary" @onclick="GoToList">Cancel</button>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private bool isLoading = false;
    private string? successMessage;
    private string? errorMessage;

    private async Task DeleteInvoice2()
    {
        isLoading = true;
        successMessage = null;
        errorMessage = null;
        try
        {
            var response = await Http.DeleteAsync($"/api/Invoice/{Id}");
            if (response.IsSuccessStatusCode)
            {
                successMessage = "Invoice deleted successfully.";
            }
            else
            {
                errorMessage = $"Error: {response.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Exception: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToList()
    {
        NavigationManager.NavigateTo("/invoice");
    }
}
