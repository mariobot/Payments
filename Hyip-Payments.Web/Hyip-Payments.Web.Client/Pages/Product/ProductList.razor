@page "/product/list"
@using Hyip_Payments.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Product List</h3>

<button class="btn btn-primary mb-3" @onclick="GoToAdd">Add New Product</button>

@if (isLoading)
{
    <p>Loading products...</p>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (products != null && products.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
                <th>Category</th>
                <th>Brand</th>
                <th>Active</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Category?.Name</td>
                    <td>@product.Brand?.Name</td>
                    <td>@(product.IsActive ? "Yes" : "No")</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-1" @onclick="() => GoToEdit(product.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => GoToDelete(product.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No products found.</p>
}

@code {
    private List<ProductModel>? products;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await Http.GetFromJsonAsync<List<ProductModel>>("api/Product");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading products: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void GoToAdd()
    {
        NavigationManager.NavigateTo("/product/add");
    }

    private void GoToEdit(int id)
    {
        NavigationManager.NavigateTo($"/product/edit/{id}");
    }

    private void GoToDelete(int id)
    {
        NavigationManager.NavigateTo($"/product/delete/{id}");
    }
}
