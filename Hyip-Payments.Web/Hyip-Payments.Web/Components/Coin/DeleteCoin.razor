@page "/coin/delete/{id:int}"

@using Hyip_Payments.Models
@using MediatR
@inject IMediator Mediator
@inject NavigationManager NavigationManager

<h3>Delete Coin</h3>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success mt-3">@successMessage</div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}
else
{
    <div class="alert alert-warning">
        Are you sure you want to delete this coin?
    </div>
    <button class="btn btn-danger" @onclick="HandleDelete">Delete</button>
    <button class="btn btn-secondary" @onclick="GoBack">Cancel</button>
}

@code {
    [Parameter]
    public int id { get; set; }

    private string? successMessage;
    private string? errorMessage;

    private async Task HandleDelete()
    {
        try
        {
            await Mediator.Send(new Hyip_Payments.Command.CoinCommand.DeleteCoinCommand(id));
            successMessage = "Coin deleted successfully!";
            // Optionally, navigate away after deletion:
            // NavigationManager.NavigateTo("/coin/list");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error deleting coin: {ex.Message}";
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/coin/list");
    }
}
