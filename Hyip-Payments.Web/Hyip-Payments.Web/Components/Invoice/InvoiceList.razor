@page "/InvoiceList"

@using Hyip_Payments.Context
@using Hyip_Payments.Models
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject PaymentsDbContext DbContext

<h3>Invoice List</h3>

@if (invoices == null)
{
    <div>Loading invoices...</div>
}
else if (!invoices.Any())
{
    <div class="alert alert-info">No invoices found.</div>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Invoice Number</th>
                <th>Date</th>
                <th>Description</th>
                <th>Total Amount</th>
                <th>Items</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var invoice in invoices)
            {
                <tr>
                    <td>@invoice.InvoiceNumber</td>
                    <td>@invoice.InvoiceDate.ToShortDateString()</td>
                    <td>@invoice.Description</td>
                    <td>@invoice.TotalAmount.ToString("C")</td>
                    <td>@invoice.Items?.Count ?? 0</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-1" @onclick="() => NavigateToView(invoice.Id)">View</button>
                        <button class="btn btn-sm btn-secondary me-1" @onclick="() => NavigateToEdit(invoice.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => NavigateToDelete(invoice.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<InvoiceModel>? invoices;

    protected override async Task OnInitializedAsync()
    {
        invoices = await LoadInvoicesAsync();
    }

    private async Task<List<InvoiceModel>> LoadInvoicesAsync()
    {
        // Fetch invoices from the database using the injected DbContext
        return await DbContext.Invoices
            .Include(i => i.Items) // Include related items
            .ToListAsync();
    }

    private void NavigateToView(int id) => NavigationManager.NavigateTo($"/ViewInvoice/{id}");
    private void NavigateToEdit(int id) => NavigationManager.NavigateTo($"/UpdateInvoice/{id}");
    private void NavigateToDelete(int id) => NavigationManager.NavigateTo($"/CancelInvoice/{id}");
}
