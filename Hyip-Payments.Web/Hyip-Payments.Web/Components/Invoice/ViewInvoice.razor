@page "/ViewInvoice/{InvoiceId:int}"

@using Hyip_Payments.Context
@using Hyip_Payments.Models
@using Microsoft.EntityFrameworkCore

<h3>View Invoice</h3>

@if (invoice == null)
{
    <div>Loading invoice...</div>
}
else
{
    <div class="card">
        <div class="card-header">
            <h4>Invoice Details</h4>
        </div>
        <div class="card-body">
            <p><strong>Invoice Number:</strong> @invoice.InvoiceNumber</p>
            <p><strong>Date:</strong> @invoice.InvoiceDate.ToShortDateString()</p>
            <p><strong>Description:</strong> @invoice.Description</p>
            <p><strong>Total Amount:</strong> @invoice.TotalAmount.ToString("C")</p>
            <p><strong>Status:</strong> @(invoice.IsActive ? "Active" : "Canceled")</p>
        </div>
        <div class="card-footer">
            <h5>Items</h5>
            @if (invoice.Items == null || !invoice.Items.Any())
            {
                <p>No items found for this invoice.</p>
            }
            else
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Item Name</th>
                            <th>Quantity</th>
                            <th>Unit Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in invoice.Items)
                        {
                            <tr>
                                <td>@item.ItemName</td>
                                <td>@item.Quantity</td>
                                <td>@item.UnitPrice.ToString("C")</td>
                                <td>@(item.Quantity* item.UnitPrice).ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
    <button class="btn btn-secondary mt-3" @onclick="NavigateBack">Back to List</button>
}

@code {
    [Parameter]
    public int InvoiceId { get; set; }

    private InvoiceModel? invoice;

    [Inject]
    private PaymentsDbContext DbContext { get; set; } = default!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        // Load the invoice by ID
        invoice = await DbContext.Invoices
            .Include(i => i.Items) // Include related items
            .FirstOrDefaultAsync(i => i.Id == InvoiceId);

        if (invoice == null)
        {
            // Handle case where invoice is not found
            NavigationManager.NavigateTo("/InvoiceList");
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/InvoiceList");
    }
}
